name: pipeline-ios-test

on:
  push

jobs:
  # set_vars:
  #   uses: ./.github/workflows/vars.yml
  
  # prepare:
  #   needs: vars
  #   runs-on: macos-latest

    # steps:
    #   - name: Checkout repository
    #     uses: actions/checkout@v4

    #   - name: display vars
    #     run: |
    #       echo "## Display Pipeline Variables ##"
    #       echo "${{ needs.set-variables.outputs.VAR1 }}"
          
 
  # build da aplicacao ##
  build:
    name: build-ios
    uses: ricardoysh/pipeline-core/.github/workflows/build-ios.yml@main
    with:
      vars_file: ./github/variables/variables.yml

      # SCHEME: ${{ needs.set_vars.outputs.SCHEME }}
      # ORG: ${{ needs.set_vars.outputs.ORG }}

  ## escaneamento de cod com sonar ##        
  sonar:
    name: run sonar scan
    needs: build
    uses: ricardoysh/pipeline-core/.github/workflows/sonar-ios.yml@main
    with:
      vars_file: ./github/variables/variables.yml
      # SCHEME: ${{ needs.set_vars.outputs.SCHEME }}
      # ORG: ${{ needs.set_vars.outputs.ORG }}

  ## ofuscacao de codigo ##
  obfuscate:
    name: run obfuscate code
    needs: sonar
    uses: ricardoysh/pipeline-core/.github/workflows/obfuscate-ios.yml@main
    with:
      vars_file: ./github/variables/variables.yml
      # SCHEME: ${{ needs.set_vars.outputs.SCHEME }}
      # ORG: ${{ needs.set_vars.outputs.ORG }}

  # approve:
  #   runs-on: ubuntu-latest
  #   needs: [obfuscate]
  #   steps:
  #     - name: Wait for approval
  #       uses: hmarr/approve-action@v2
  # teste
  
  # releae-app:
  #   name: release ios app
  #   needs: [obfuscate]
  #   uses: ricardoysh/pipeline-core/.github/workflows/release-ios.yml@main

